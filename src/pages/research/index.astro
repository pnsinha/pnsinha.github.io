---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

const researchPosts = await getCollection('research', ({ data }) => {
  return import.meta.env.PROD ? !data.draft : true;
});

// Sort by date, newest first
const sortedPosts = researchPosts.sort(
  (a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime()
);
---

<Layout title="Research">
  <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-8">Research</h1>
    
    <div class="space-y-8">
      {sortedPosts.map((post) => (
        <article class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden">
          <div class="p-6">
            <div class="flex justify-between items-start">
              <div class="flex-1">
                <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-2">
                  <a href={`/research/${post.slug}`} class="hover:text-primary-600 dark:hover:text-primary-400">
                    {post.data.title}
                  </a>
                </h2>
                
                <div class="flex items-center text-sm text-gray-500 dark:text-gray-400 mb-4">
                  <span>{post.data.pubDate.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}</span>
                  {post.data.journal && (
                    <span class="mx-2">â€¢</span>
                    <span>{post.data.journal}</span>
                  )}
                </div>
                
                <p class="text-gray-600 dark:text-gray-300 mb-4">
                  {post.data.description}
                </p>
                
                {post.data.links && post.data.links.length > 0 && (
                  <div class="flex flex-wrap gap-3 mt-4">
                    {post.data.links.map((link) => (
                      <a 
                        href={link.url} 
                        target="_blank" 
                        rel="noopener noreferrer"
                        class="inline-flex items-center px-3 py-1 text-sm font-medium rounded-md bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-600"
                      >
                        {link.label}
                      </a>
                    ))}
                  </div>
                )}
              </div>
              
              {post.data.heroImage && (
                <div class="ml-6 flex-shrink-0">
                  <img 
                    src={post.data.heroImage} 
                    alt="" 
                    class="h-24 w-24 object-cover rounded-md"
                  />
                </div>
              )}
            </div>
            
            {post.data.tags && post.data.tags.length > 0 && (
              <div class="mt-4 pt-4 border-t border-gray-200 dark:border-gray-700">
                <div class="flex flex-wrap gap-2">
                  {post.data.tags.map((tag) => (
                    <a 
                      href={`/tags/${tag.toLowerCase()}`}
                      class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200"
                    >
                      {tag}
                    </a>
                  ))}
                </div>
              </div>
            )}
          </div>
        </article>
      ))}
    </div>
  </div>
</Layout>
