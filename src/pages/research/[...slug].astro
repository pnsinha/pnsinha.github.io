---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
  const researchPosts = await getCollection('research');
  return researchPosts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();
---

<Layout title={post.data.title}>
  <article class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <header class="mb-8">
      <h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-4">
        {post.data.title}
      </h1>
      
      <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between text-sm text-gray-500 dark:text-gray-400 mb-6">
        <div class="flex items-center space-x-4">
          <span>
            Published on {post.data.pubDate.toLocaleDateString('en-US', { 
              year: 'numeric', 
              month: 'long', 
              day: 'numeric' 
            })}
          </span>
          {post.data.updatedDate && (
            <span>
              • Updated on {post.data.updatedDate.toLocaleDateString('en-US', { 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric' 
              })}
            </span>
          )}
        </div>
        
        {post.data.doi && (
          <div class="mt-2 sm:mt-0">
            <span class="font-medium">DOI:</span>{' '}
            <a 
              href={`https://doi.org/${post.data.doi}`} 
              target="_blank" 
              rel="noopener noreferrer"
              class="text-primary-600 dark:text-primary-400 hover:underline"
            >
              {post.data.doi}
            </a>
          </div>
        )}
      </div>
      
      {post.data.authors && post.data.authors.length > 0 && (
        <div class="mb-6">
          <h2 class="text-lg font-medium text-gray-900 dark:text-white mb-2">Authors</h2>
          <p class="text-gray-600 dark:text-gray-300">
            {post.data.authors.join(', ')}
          </p>
        </div>
      )}
      
      {post.data.journal && (
        <div class="mb-6">
          <h2 class="text-lg font-medium text-gray-900 dark:text-white mb-2">Journal</h2>
          <p class="text-gray-600 dark:text-gray-300">
            {post.data.journal}
          </p>
        </div>
      )}
      
      {post.data.links && post.data.links.length > 0 && (
        <div class="mb-6">
          <h2 class="text-lg font-medium text-gray-900 dark:text-white mb-2">Links</h2>
          <div class="flex flex-wrap gap-3">
            {post.data.links.map((link) => (
              <a 
                href={link.url} 
                target="_blank" 
                rel="noopener noreferrer"
                class="inline-flex items-center px-3 py-2 text-sm font-medium rounded-md bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200 hover:bg-gray-200 dark:hover:bg-gray-600"
              >
                {link.label}
              </a>
            ))}
          </div>
        </div>
      )}
      
      {post.data.tags && post.data.tags.length > 0 && (
        <div class="flex flex-wrap gap-2 mt-4">
          {post.data.tags.map((tag) => (
            <a 
              href={`/tags/${tag.toLowerCase()}`}
              class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200"
            >
              {tag}
            </a>
          ))}
        </div>
      )}
    </header>
    
    <div class="prose dark:prose-invert max-w-none">
      <Content />
    </div>
    
    <div class="mt-12 pt-8 border-t border-gray-200 dark:border-gray-700">
      <a 
        href="/research" 
        class="inline-flex items-center text-primary-600 dark:text-primary-400 hover:underline"
      >
        ← Back to Research
      </a>
    </div>
  </article>
</Layout>
