---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

// Get all blog posts, filter out drafts, and sort by date
const posts = (await getCollection('blog'))
  .filter((post) => !post.data.draft)
  .sort(
    (a, b) =>
      new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf()
  );

// Format date
const formatDate = (date) => {
  return new Date(date).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  });
};
---

<Layout title="Writings" description="Latest articles and research updates">
  <div class="max-w-2xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <header class="mb-12">
      <h1 class="text-3xl md:text-4xl font-bold tracking-tight text-gray-900 dark:text-white mb-4">
        Writings
      </h1>
      <p class="text-lg text-gray-600 dark:text-gray-300">
        Thoughts, ideas, and updates on my research and other topics I find interesting.
      </p>
    </header>

    <div class="space-y-10">
      {posts.map((post) => {
        const { slug } = post;
        const { title, description, pubDate, updatedDate, heroImage, tags } = post.data;
        
        return (
          <article key={slug} class="group">
            <a href={`/blog/${slug}`} class="block">
              <div class="flex flex-col sm:flex-row gap-6">
                {heroImage && (
                  <div class="flex-shrink-0 w-full sm:w-40 h-40 rounded-lg overflow-hidden bg-gray-100 dark:bg-gray-800">
                    <img
                      src={heroImage}
                      alt=""
                      class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
                      loading="lazy"
                    />
                  </div>
                )}
                <div class="flex-1">
                  <h2 class="text-xl font-semibold text-gray-900 dark:text-white group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors">
                    {title}
                  </h2>
                  <div class="mt-1 text-sm text-gray-500 dark:text-gray-400">
                    <time datetime={pubDate.toISOString()}>
                      {formatDate(pubDate)}
                    </time>
                    {updatedDate && updatedDate.getTime() !== pubDate.getTime() && (
                      <span class="ml-2 text-xs">
                        (Updated {formatDate(updatedDate)})
                      </span>
                    )}
                  </div>
                  <p class="mt-2 text-gray-600 dark:text-gray-300">
                    {description}
                  </p>
                  {tags && tags.length > 0 && (
                    <div class="mt-3 flex flex-wrap gap-2">
                      {tags.map((tag) => (
                        <span class="px-2 py-1 text-xs rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300">
                          {tag}
                        </span>
                      ))}
                    </div>
                  )}
                </div>
              </div>
            </a>
          </article>
        );
      })}
    </div>
  </div>
</Layout>
